# Generated by Django 5.2.6 on 2025-09-09 16:10

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('user_type', models.CharField(choices=[('patient', 'Paciente'), ('professional', 'Psicólogo'), ('admin', 'Administrador')], default='patient', max_length=15, verbose_name='Tipo de usuario')),
                ('ci', models.CharField(help_text='Cédula de identidad sin guiones ni puntos', max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^\\d{7,10}$', 'CI debe tener entre 7-10 dígitos')], verbose_name='Cédula de Identidad')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\d{7,8}$', 'Teléfono debe tener 7-8 dígitos')], verbose_name='Teléfono')),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=1, verbose_name='Sexo')),
                ('address', models.TextField(verbose_name='Dirección')),
                ('date_of_birth', models.DateField(verbose_name='Fecha de nacimiento')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='Foto de perfil')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verificado')),
                ('is_active_patient', models.BooleanField(default=True, verbose_name='Paciente activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emergency_contact_name', models.CharField(max_length=100, verbose_name='Nombre contacto de emergencia')),
                ('emergency_contact_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\d{7,8}$', 'Teléfono debe tener 7-8 dígitos')], verbose_name='Teléfono contacto de emergencia')),
                ('emergency_contact_relationship', models.CharField(help_text='Ej: Madre, Esposo, Hermana, etc.', max_length=50, verbose_name='Parentesco')),
                ('occupation', models.CharField(blank=True, max_length=100, verbose_name='Ocupación')),
                ('education_level', models.CharField(blank=True, choices=[('primaria', 'Primaria'), ('secundaria', 'Secundaria'), ('tecnico', 'Técnico'), ('universitario', 'Universitario'), ('postgrado', 'Postgrado')], max_length=50, verbose_name='Nivel educativo')),
                ('initial_reason', models.TextField(blank=True, help_text='Descripción breve del motivo de la primera consulta', verbose_name='Motivo inicial de consulta')),
                ('how_found_us', models.CharField(blank=True, help_text='Referido por médico, internet, familiar, etc.', max_length=100, verbose_name='¿Cómo nos encontró?')),
                ('profile_completed', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Paciente',
                'verbose_name_plural': 'Perfiles de Pacientes',
                'db_table': 'patient_profiles',
            },
        ),
    ]
